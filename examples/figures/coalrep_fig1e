#Script for plotting Bootstrapped PSMC of LTR-Gypsy repeat class and CV of bootstraps across all repeats
#Written By: Ajinkya Bharatraj Patil.
pdf("coalrep_Figure_1E_LTR_CV_BS.pdf",height=15,width=20)
par(mar = c(6, 4, 8, 6))
library("scales")
pt_un <- read.table("../bs/pt_un/pt_un.0.txt")
pt_hm <- read.table("../bs/pt_hm/pt_hm.0.txt")
pt_hm_bs = list.files("../bs/pt_hm",pattern="pt_hm.combined.*.txt", full.names = TRUE)
pt_un_bs = list.files("../bs/pt_un",pattern="pt_un.combined.*.txt", full.names = TRUE)
plot(pt_un$V1,pt_un$V2,type="n",col="orangered",log="x",lwd=3,ylim=c(0,max(pt_un$V2)*1.5),xlab="Years ago", ylab="Effective population size x 10e4", main="Effect of LTR Gypsy repeat class on PSMC",axes=FALSE)
for (i in pt_un_bs){
read.table(file=i,header=FALSE)-> pt_un_bs_all
lines(pt_un_bs_all$V1,pt_un_bs_all$V2, type="s",col=scales::alpha(rgb(col2rgb("orangered")[1,],col2rgb("orangered")[2,],col2rgb("orangered")[3,],max = 255), 0.15))
}
lines(pt_un$V1,pt_un$V2,type="s",col="orangered",lwd=3)
for (i in pt_hm_bs){
read.table(file=i,header=FALSE)-> pt_hm_bs_all
lines(pt_hm_bs_all$V1,pt_hm_bs_all$V2, type="s",col=scales::alpha(rgb(col2rgb("blue")[1,],col2rgb("blue")[2,],col2rgb("blue")[3,],max = 255), 0.15))
}
lines(pt_hm$V1,pt_hm$V2,type="s",col="blue",lwd=3)
gyp_bs = list.files("../bs/LTR_Gypsy",pattern="LTR_Gypsy.combined.*.txt", full.names = TRUE)
gyp_bs_orig <- read.table(file="../bs/LTR_Gypsy/LTR_Gypsy.0.txt")
for (i in gyp_bs){
read.table(file=i,header=FALSE)-> gyp_bs_all
lines(gyp_bs_all$V1,gyp_bs_all$V2, type="s",col=scales::alpha(rgb(col2rgb("plum1")[1,],col2rgb("plum1")[2,],col2rgb("plum1")[3,],max = 255), 0.15))
}
lines(gyp_bs_orig$V1,gyp_bs_orig$V2,type="s",col="plum1",lwd=3)
legend("topleft",legend=c("Unmasked","Hardmasked","LTR_Gypsy"),fill=c("orangered","blue","plum1"),cex=1.5)
axis(1, col="black",las=1)
axis(2, col="black",las=1)
box()
par(new=TRUE)
plot(c(1:58),c(1:58),ylim=c(0,0.3),type="n",xlab="",ylab="",axes=FALSE)
rep_col <- c("blue","orangered","plum1","hotpink","darkolivegreen","peru","olivedrab1","orange2","darkseagreen1","palevioletred1","navy","khaki","gray50","cornflowerblue","yellowgreen","chartreuse4","cadetblue4","burlywood4","brown4","blueviolet","bisque4","aquamarine1","aquamarine3","aquamarine4","azure3","azure4","brown3","burlywood3","cadetblue2","chartreuse1","chocolate2","coral","coral2","coral3","coral4","cornsilk4","cyan3","cyan4","darkblue","darkgoldenrod","darkgoldenrod2","darkgoldenrod4","darkmagenta")
colcount <- 0
colcount <- colcount+1
read.table(file="../bs/pt_hm/pt_hm.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/pt_un/pt_un.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/DNA_CMC-EnSpm.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/DNA.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/DNA_hAT-Ac.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/DNA_hAT-Tag1.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/DNA_hAT-Tip100.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/DNA_PIF-Harbinger.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/LINE_L1.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/Low_complexity.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/LTR_Caulimovirus.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/LTR_Copia.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/LTR_Gypsy/LTR_Gypsy.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/RC_Helitron.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/rRNA.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/Satellite.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/Simple_repeat.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/SINE.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/SINE_tRNA.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/snRNA.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
colcount <- colcount+1
read.table(file="../bs/tRNA.agg",header=FALSE)->A
as.data.frame(aggregate(A$V2,list(A$V6),sd))->B
as.data.frame(aggregate(A$V2,list(A$V6),mean))->Bm
B$x/Bm$x->B$cv
lines(B$Group.1,B$cv,col=rep_col[colcount])
mtext("Atomic Interval",side=3,col="red",line=2.5)
mtext("CV across Ne of bootstraps",side=4,col="red",line=2.5)
axis(3, ylim=c(1,58),col="red",col.axis="red",las=1)
axis(4, ylim=c(1,58),col="red",col.axis="red",las=1)
dev.off()
